@use '../mixins' as mixins;

.Button {
  --button-padding-x-xs: calc(var(--unit) * 4);
  --button-padding-x-sm: calc(var(--unit) * 4);
  --button-padding-x-md: calc(var(--unit) * 6);
  --button-padding-x-lg: calc(var(--unit) * 6);
  --button-padding-x-xl: calc(var(--unit) * 8);

  --button-height-xs: calc(var(--unit) * 14);
  --button-height-sm: calc(var(--unit) * 16);
  --button-height-md: calc(var(--unit) * 18);
  --button-height-lg: calc(var(--unit) * 20);
  --button-height-xl: calc(var(--unit) * 22);

  min-width: 0;
  user-select: none;
  border: solid var(--border-sm);
  outline: solid var(--border-sm);
  outline-color: var(--button-outline-color, transparent);
  height: var(--button-height, var(--button-height-xs));
  display: var(--button-display, inline-flex);
  padding-inline: var(--button-padding-x, var(--button-padding-x-xs));
  align-items: center;

  &-inner {
    height: 100%;
    display: flex;
    overflow: visible;
    align-items: center;
    justify-content: var(--button-justify, center);
    transition-property: transform, opacity, color;
    transition-timing-function: var(--easing-standard-productive);
    transition-duration: var(--easing-duration-1);
  }

  &-label {
    height: 100%;
    display: flex;
    overflow: hidden;
    align-items: center;
    white-space: nowrap;
    opacity: var(--button-label-opacity, 1);

    &[data-loading] {
      --button-label-opacity: 0.2;
    }
  }
  &-content {
    display: flex;
    align-items: center;
  }
}

.ButtonGroup {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  gap: calc(var(--unit) * 1);

  [data-orientation='vertical'] {
    flex-direction: column;
  }
  [data-orientation='horizontal'] {
    flex-direction: row;
  }
}

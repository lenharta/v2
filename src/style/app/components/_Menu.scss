@use '../utils' as utils;

.v2-menu {
  display: block;

  &-nav,
  &-header,
  &-footer,
  &-controls {
    width: 100%;
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    justify-content: flex-start;
  }

  &-display {
    @include utils.reset;

    gap: var(--v2-unit);
    width: 100vw;
    display: flex;
    height: calc(100vh - calc(var(--v2-action) - calc(var(--v2-unit) * 2)));
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    padding: var(--v2-unit);
  }

  &-header {
    padding-block: calc(var(--v2-gutter) * 1.5);
    padding-inline: var(--v2-gutter);
  }

  &-header-date,
  &-header-time,
  &-header-greet {
    font-weight: var(--v2-font-weight-medium);
  }

  &-header-date {
    font-size: var(--v2-font-size-04);
  }

  &-header-time {
    font-size: var(--v2-font-size-04);
  }

  &-header-time {
    font-size: var(--v2-font-size-05);
  }

  &-target {
    @include utils.reset;
    @include utils.button-focus;
    @include utils.button-cursor;

    width: var(--v2-action-button);
    height: var(--v2-action-button);
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    gap: calc(var(--v2-unit) * 2);
  }

  &-target-cell {
    min-width: calc(var(--v2-unit) * 2);
    min-height: calc(var(--v2-unit) * 2);
    transition-property: rotate, transform;
    transition-duration: var(--v2-duration-moderate-02);
    transition-timing-function: var(--v2-easing-expressive);

    [data-open] & {
      rotate: 45deg;
    }
  }

  &-nav {
    @include utils.reset;
    flex: 1 1;
  }

  &-nav-list {
    @include utils.reset;

    width: 100%;
    max-width: 100%;
    display: grid;
    place-content: start;
    grid-template-rows: auto;
    grid-template-columns: repeat(1, 1fr);
    gap: var(--v2-unit);
  }

  &-nav-item {
    @include utils.reset;

    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--v2-font-size-03);
    font-weight: var(--v2-font-weight-medium);
  }

  &-nav-link {
    @include utils.reset;
    @include utils.link-focus;
    @include utils.link-cursor;
    @include utils.where-writing-mode;

    width: 100%;
    height: 100%;
    border: solid 2px transparent;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding-block: calc(var(--v2-space) / 1.5);
    padding-inline: var(--v2-space);
    gap: var(--v2-space);
  }

  &-target-line {
    @include utils.reset;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;
    gap: calc(var(--v2-unit) * 2);
  }

  &-controls {
    display: grid;
    place-items: start;
    grid-template-rows: auto;
    grid-template-columns: 1fr;
    gap: var(--v2-unit);
  }

  &-controls-box {
    width: 100%;
    display: grid;
    place-content: start;
    grid-template-rows: auto;
    gap: var(--v2-unit);
  }

  &-controls-upper-box {
    grid-template-columns: repeat(3, 1fr);
  }

  &-controls-lower-box {
    grid-template-columns: repeat(6, 1fr);
  }

  &-controls-button {
    @include utils.reset;
    @include utils.button-focus;
    @include utils.button-cursor;

    width: 100%;
    height: 100%;
    border: solid 2px transparent;
    display: flex;
    align-items: center;
    justify-content: center;
    padding-block: calc(var(--v2-space) / 1.5);
  }

  &-controls-button-layout {
    display: flex;
    align-items: center;
    justify-content: flex-start;

    gap: var(--v2-space);

    .v2-icon {
      width: var(--v2-space);
      height: var(--v2-space);
    }
  }

  &-footer {
    gap: var(--v2-gutter);
    padding-block: var(--v2-gutter);
    padding-inline: var(--v2-gutter);
    justify-content: space-between;
    flex-direction: row;

    [data-prefers-dir='rtl'] & {
      flex-direction: row-reverse;
    }
  }

  &-brand {
    @include utils.reset;
    width: calc(var(--v2-space) * 1.5);
    height: calc(var(--v2-space) * 1.5);
  }

  &-handle {
    @include utils.reset;
    @include utils.link-focus;
    @include utils.link-cursor;
    @include utils.where-writing-mode;
  }
}

.v2-menu-target-line:nth-of-type(1) {
  .v2-menu-target-cell:nth-of-type(2) {
    [data-open] & {
      transform: translate(0%, 140%);
    }
  }
}

.v2-menu-target-line:nth-of-type(2) {
  .v2-menu-target-cell:nth-of-type(1) {
    [data-open] & {
      transform: translate(140%, 0%);
    }
  }
  .v2-menu-target-cell:nth-of-type(3) {
    [data-open] & {
      transform: translate(-140%, 0%);
    }
  }
}

.v2-menu-target-line:nth-of-type(3) {
  .v2-menu-target-cell:nth-of-type(2) {
    [data-open] & {
      transform: translate(0%, -140%);
    }
  }
}

@media (min-width: 50em) {
  .v2-menu-display {
    max-width: 40em;
    margin-left: unset;
  }
}

@media (min-width: 60em) {
  .v2-menu-display {
    max-width: 30em;
    margin-left: unset;
  }
}
